from langchain.chains import RetrievalQA
from langchain.document_loaders import PyPDFLoader
from langchain.embeddings import HuggingFaceEmbeddings
from langchain.llms import GPT4All
from langchain.text_splitter import RecursiveCharacterTextSplitter
from langchain.vectorstores import Chroma
from langchain.embeddings import HuggingFaceInstructEmbeddings
#from pdf2image import convert_from_path
print("1")
loader = PyPDFLoader(r"C:\Users\puttaparthiK\Downloads\privateGPT\content\privateGPT\source_documents\Resume.pdf")
documents = loader.load_and_split()
text_splitter = RecursiveCharacterTextSplitter(chunk_size=1024, chunk_overlap=64)
texts = text_splitter.split_documents(documents)
embeddings = HuggingFaceEmbeddings(model_name=r"C:\Users\puttaparthiK\Downloads\privateGPT\content\privateGPT\all-MiniLM-L6-v2")
#embeddings = HuggingFaceInstructEmbeddings(model_name=r"C:\Users\puttaparthiK\Downloads\ML\instructor-large\content\instructor-large")
print("2")
db = Chroma.from_documents(texts, embeddings, persist_directory=r"C:\Users\puttaparthiK\Downloads\privateGPT\content\privateGPT\db")
model_n_ctx = 1000
model_path = r"C:\Users\puttaparthiK\Downloads\privateGPT\content\privateGPT\ggml-gpt4all-j-v1.3-groovy.bin"
llm = GPT4All(model=model_path, n_ctx=1000, backend="gptj", verbose=False)
qa = RetrievalQA.from_chain_type(
    llm=llm,
    chain_type="stuff",
    retriever=db.as_retriever(search_kwargs={"k": 3}),
    return_source_documents=True,
    verbose=False, )

res = qa( "What skills kiran have?")    
print(res)
